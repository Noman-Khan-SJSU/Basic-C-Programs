// Power or exponent function calculates a number raised to some power/exponent.
// It calculates the number multiplied to itself 'n' times.
// Time Complexity: O(n)

#include<stdio.h>

void main()
{
    long base, exponent,solution=1,i;
    printf("Enter the base: ");
    scanf("%ld",&base);
    printf("Enter its power: ");
    scanf("%ld", &exponent);
    for (i=0; i<exponent; i++)
        solution *= base;
    printf("%ld to the power %ld is %ld", base, exponent, solution);
}


// This is a better approach, since loop will run till exponent/2 only. However, Time is still: O(n) or O(exp).

/*
void main()
{
    long base, exponent,solution=1,i;
    printf("Enter the base:");
    scanf("%ld",&base);
    printf("Enter its power: ");
    scanf("%ld", &exponent);
    if (exponent%2==0)
    {
        for (i=0; i<exponent/2; i++)                     // If the power is even then, base^power = (base^power/2 * base^power/2)
            solution = solution * base;
        solution *= solution;
    }
    else
    {
        for (i=0; i<exponent/2; i++)
            solution = solution * base;
        solution = solution * solution * base;
    }
    printf("%ld to the power %ld is %ld", base, exponent, solution);
}
*/

